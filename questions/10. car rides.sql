day 6 of my 30 days video
/*
SQL Tasks
1) Find the driver with the highest rating
Return: driver_name, driver_rating

2) Calculate the total revenue generated by each driver
Return: driver_name, driver_id, total_revenue

3) Find the passenger with the highest number of rides
Return: passenger_name, passenger_id, number_of_rides

4) Identify the most frequent ride distance
Return: ride_distance, frequency

Tables & Data
Table: passengers
passenger_id (PK)	passenger_name	passenger_rating	join_date
1	Alice Brown	4.7	2022-03-11
2	Charlie Green	4.6	2021-09-19
3	David White	4.8	2020-05-25

Table: drivers
driver_id (PK)	driver_name	driver_rating	join_date
1	John Doe	4.8	2022-01-15
2	Jane Smith	4.5	2021-07-22
3	Bob Johnson	4.9	2020-11-30

Table: rides
ride_id (PK)	driver_id	passenger_id	ride_date	ride_distance	ride_cost
1	1	1	2023-06-01	12.5	25
2	2	2	2023-06-02	8	16
3	3	3	2023-06-03	10.2	20.4
4	1	2	2023-06-04	7.5	15
5	2	3	2023-06-05	15	30
6	2	3	2023-06-07	15	30
*/

1 sol:

select driver_name, max(driver_rating) from drivers
group by 1

2 sol:
select d.driver_name, d.driver_id, sum(r.ride_cost) as total_revenue from drivers d
join rides r on d.driver_id = r.driver_id
group by 1,2

3 sol:
select p.passenger_name, p.passenger_id, count(r.ride_id) as number_of_rides from passengers p
join rides r on p.passenger_id = r.passenger_id
group by 1,2
order by 3 desc
limit 1

4 sol:
select ride_distance, count(*) as frequency from rides
group by ride_distance
order by 2 desc
limit 1
